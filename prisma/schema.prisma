// prisma/schema.prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model Setting {
  id     Int    @id @default(autoincrement())
  key    String @unique
  value  String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Image {
  id          Int      @id @default(autoincrement())
  url         String
  alt         String
  tag         String?
  observation String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  // Relación inversa con Categories
  categories  Category[]
}

model Category {
  id          Int      @id @default(autoincrement())
  name        String
  slug        String   @unique // Agregar unique constraint para slugs
  description String
  imageId     Int      // Campo para la foreign key
  featured    Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  // Relación con Image
  image       Image    @relation(fields: [imageId], references: [id])
  
  // Si tienes productos que pertenecen a categorías, puedes agregar:
  products    Product[]
}

model Product {
  id             Int      @id @default(autoincrement())
  name           String
  price          Int      // Prisma recomienda Int para precios (en centavos)
  description    String
  stock          Int
  isActive       Boolean  @default(true)
  isFeatured     Boolean  @default(false)
  retailPrice    Int
  wholesalePrice Int
  discount       Int
  discountType   String
  slug           String   @unique // Agregar unique constraint para slugs
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  
  // Si quieres relación con categorías:
  categoryId     Int?
  category       Category? @relation(fields: [categoryId], references: [id])
}
---
import { turso } from '@/lib/turso';
import { Database } from '@/lib/db';

import AuthSection from '@/components/auth/AuthSection';
import CartCounter from '@/components/shared/cart/CartCounter';
import { navBarLinks } from '@/shared/consts';
import type { Settings } from '@/shared/types';

// Obtener configuraciones de la base de datos
const settings = (await Database.getAllSettings()) as unknown as Settings[];

const homeSettings = settings.find((s) => s.key === 'home');
const home = JSON.parse(homeSettings?.value || '{}');

const logoImage = home.menu?.logoId
  ? await turso
      .execute({
        sql: 'SELECT url, alt FROM Image WHERE id = ?',
        args: [home.menu.logoId],
      })
      .then((result) => result.rows[0] || null)
  : null;
---

<nav
  class='sticky top-0 z-50 w-full border-b bg-background/70 backdrop-blur-sm'
>
  <div class='container flex justify-between items-center p-4 mx-auto'>
    <div class='text-gray-300'>
      <div class='flex items-center justify-center'>
        {
          logoImage && (
            <img
              src={String(logoImage.url)}
              alt={String(logoImage.alt)}
              class='w-10 h-10'
            />
          )
        }
        <a href='/' class='text-2xl font-bold'>
          {home.menu?.siteName || 'Premiarte'}
        </a>
      </div>
    </div>

    <div class='flex items-center justify-center text-gray-300'>
      {
        navBarLinks.map((link) => (
          <div>
            <a href={link.href} class='mx-1.5 sm:mx-6'>
              {link.name}
            </a>
            <div
              class='border-b-2 border-transparent mx-4'
              data-href={link.href}
              id={`menu-line-${link.href.replace('/', 'home')}`}
            />
          </div>
        ))
      }
      <CartCounter client:load transition:persist />
    </div>

    <AuthSection client:idle />
  </div>
</nav>

<script>
  function setActiveMenu() {
    const currentPath = window.location.pathname;

    // Limpiar todas las líneas
    document.querySelectorAll('[data-href]').forEach((el) => {
      el.classList.remove('border-blue-500');
      el.classList.add('border-transparent');
      el.removeAttribute('style');
    });

    // Activar la línea actual
    const activeElement = document.querySelector(
      `[data-href="${currentPath}"]`
    ) as HTMLElement;
    if (activeElement) {
      activeElement.classList.remove('border-transparent');
      activeElement.classList.add('border-blue-500');
      activeElement.style.viewTransitionName = 'menu-line';
    }
  }

  // Ejecutar al cargar y después de transiciones
  setActiveMenu();
  document.addEventListener('astro:after-swap', setActiveMenu);
</script>

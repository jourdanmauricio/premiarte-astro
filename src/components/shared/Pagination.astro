---
interface Props {
  totalPages: number;
  currentPage?: number;
  categorySlug?: string;
}

const { totalPages, currentPage = 1, categorySlug } = Astro.props;

const url = Astro.url;
const path = url.pathname;

// Determinar la categoría base desde el path si no se proporciona
const basePath = categorySlug
  ? `/categoria/${categorySlug}`
  : path.includes('/page/')
    ? path.split('/page/')[0]
    : path;

// Función para generar URLs de paginación
const getPageUrl = (page: number) => {
  if (page === 1) {
    return basePath;
  }
  return `${basePath}/page/${page}`;
};

const safeCurrentPage = Math.max(
  currentPage > totalPages ? totalPages : currentPage,
  1
);
---

<div class='flex justify-between items-center my-20 mx-auto max-w-[300px]'>
  <a
    href={getPageUrl(Math.max(safeCurrentPage - 1, 1))}
    class='p-2 bg-orange-500 text-white rounded hover:bg-orange-500/90 transition-colors'
    >Anterior</a
  >
  <span>Página {safeCurrentPage} de {totalPages}</span>
  <a
    href={getPageUrl(Math.min(safeCurrentPage + 1, totalPages))}
    class='p-2 bg-orange-500 text-white rounded hover:bg-orange-500/90 transition-colors'
    >Siguiente</a
  >
</div>

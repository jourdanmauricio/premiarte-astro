---
import { ClientRouter } from 'astro:transitions';

import NavBar from '@/components/shared/NavBar.astro';
import ToasterProvider from '@/components/ui/ToasterProvider.tsx';

import '../styles/global.css';
import Footer from '@/components/shared/Footer.astro';
// import Footer from '@/components/shared/Footer';

interface Props {
  title?: string;
  description?: string;
  image?: string;
}

const isDashboard = Astro.url.pathname.startsWith('/dashboard');

const { title } = Astro.props;
---

<!doctype html>
<html lang='es' class={isDashboard ? '' : 'dark'}>
  <head>
    <meta charset='UTF-8' />
    <meta name='viewport' content='width=device-width' />
    <link rel='icon' type='image/svg+xml' href='/favicon.svg' />
    <meta name='generator' content={Astro.generator} />
    <title>{title}</title>
    <ClientRouter fallback='none' />
  </head>
  <body>
    {/* Background optimizado */}
    <div class='fixed inset-0 -z-10'>
      {/* Gradiente base - este está bien */}
      <div
        class='absolute inset-0 bg-gradient-to-br from-black via-gray-950 to-black'
      >
      </div>

      {/* Efectos optimizados usando CSS puro en lugar de blur-3xl */}
      <div
        class='absolute inset-0'
        style={{
          background: `
            radial-gradient(circle at 25% 25%, rgba(220, 38, 38, 0.03) 0%, transparent 50%),
            radial-gradient(circle at 75% 67%, rgba(249, 115, 22, 0.03) 0%, transparent 50%)
          `,
        }}
      >
      </div>
    </div>
    {!isDashboard && <NavBar />}
    <main class={isDashboard ? 'w-full' : 'm-auto'}>
      <slot />
    </main>

    {!isDashboard && <Footer />}

    <!-- Toaster para notificaciones solo en páginas públicas -->
    {!isDashboard && <ToasterProvider client:load />}
    <!-- <ToasterProvider client:load /> -->
  </body>
</html>
